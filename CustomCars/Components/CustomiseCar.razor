
<h3>Customise Your Dream Car</h3>

<div class="customization-container">

    <!-- Base Car Type -->
    <div class ="card">
        <h5>🚗 Choose Your Base Car</h5>
        <select name="carTypeOptions" @bind="carType">
            @foreach (string car in Enum.GetNames(typeof(CarType)))
            {
                <option value="@car">@car</option>
            }
        </select>
    </div>

    <!-- Paint Options -->
    <div class="card">
        <h5>🎨 Paint Options</h5>
        <div>
            <label>Colour</label>
            <select name="paintColourOptions" @bind="paintColour">
                @foreach (string paintColour in Enum.GetNames(typeof(PaintColour)))
                {
                    <option value="@paintColour">@paintColour</option>
                }
            </select>
        </div>
        <div>
            <label>Finish</label>
            <select name="paintFinishOptions" @bind="paintFinish">
                @foreach (string paintFinish in Enum.GetNames(typeof(PaintFinish)))
                {
                    <option value="@paintFinish">@paintFinish</option>
                }
            </select>
        </div>
    </div>

    <!-- Wheel Options -->
    <div class="card">
        <h5>🛞 Wheel Options</h5>
        <div>
            <label>Size</label>
            <select name="wheelSizeOptions" @bind="wheelSize">
                @foreach (string wheelSize in Enum.GetNames(typeof(WheelSize)))
                {
                    <option value="@wheelSize">@wheelSize</option>
                }
            </select>
        </div>
        <div>
            <label>Type</label>
            <select name="wheelTypeOptions" @bind="wheelType">
                @foreach (string wheelType in Enum.GetNames(typeof(WheelType)))
                {
                    <option value="@wheelType">@wheelType</option>
                }
            </select>
        </div>
    </div>

    <!-- Interior Options -->
    <div class="card">
        <h5>🪑 Interior Options</h5>
        <div>
            <label>Colour</label>
            <select name="interiorColourOptions" @bind="interiorColour">
                @foreach (string interiorColour in Enum.GetNames(typeof(InteriorColour)))
                {
                    <option value="@interiorColour">@interiorColour</option>
                }
            </select>
        </div>
        <div>
            <label>Material</label>
            <select name="interiorMaterialOptions" @bind="interiorMaterial">
                @foreach (string interiorMaterial in Enum.GetNames(typeof(InteriorMaterial)))
                {
                    <option value="@interiorMaterial">@interiorMaterial</option>
                }
            </select>
        </div>
    </div>

    <!-- Extras -->
    <div class="card">
        <h5>🌟 Extras</h5>
        <div>
            <label>Heated Seats</label>
            <input type="checkbox" @bind="heatedSeats" name="heatedSeats" /> Include heated seats
        </div>
        <div>
            <label>Touch Screen</label>
            <input type="checkbox" @bind="touchScreen" name="touchScreen" /> Include Touch screen controls
        </div>
        <br />
        <br />
    </div>

    <!-- Preview and Confirm -->
    <div class="card">
        <h5>🚘 Your Configuration</h5>
        <p>@carDetails</p>
        <button @onclick="ShowCurrentConfiguration">Show Configuration</button>
    </div>

</div>

<style>
    .customization-container {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 20px;
        max-width: 1200px;
        margin: 0 auto;
    }

    .card, .preview-card {
        background: #ffffff;
        border-radius: 12px;
        padding: 20px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        transition: transform 0.2s, box-shadow 0.2s;
    }
</style>

@code {
    private CarType carType = CarType.Hatchback;
    private PaintColour paintColour = PaintColour.Red;
    private PaintFinish paintFinish = PaintFinish.Matte;
    private WheelSize wheelSize = WheelSize.SeventeenInch;
    private WheelType wheelType = WheelType.Steel;
    private InteriorColour interiorColour = InteriorColour.Black;
    private InteriorMaterial interiorMaterial = InteriorMaterial.Cloth;
    private bool heatedSeats = false;
    private bool touchScreen = false;

    private string? carDetails;

    private void ShowCurrentConfiguration()
    {
        Car newCar;

        if (carType == CarType.Hatchback)
        {
            newCar = new Hatchback();
        }
        else
        {
            newCar = new Crossover();
        }

        newCar = new PaintColourDecorator(newCar, paintColour);
        newCar = new PaintTypeDecorator(newCar, paintFinish);
        newCar = new WheelSizeDecorator(newCar, wheelSize);
        newCar = new WheelTypeDecorator(newCar, wheelType);
        newCar = new InteriorColourDecorator(newCar, interiorColour);
        newCar = new InteriorMaterialDecorator(newCar, interiorMaterial);

        if (heatedSeats == true)
        {
            newCar = new HeatedSeatsDecorator(newCar);
        }
        if (touchScreen == true)
        {
            newCar = new TouchScreenDecorator(newCar);
        }

        carDetails = $"{newCar.Description}. \nCost: €{newCar.GetCost()}";
    }
}
