
<h3>Customise Your Dream Car</h3>

<br />

<p><strong>Pick base car type: </strong></p>
<select name="carTypeOptions" @bind="carType">
    @foreach (string car in Enum.GetNames(typeof(CarType)))
    {
        <option value="@car">@car</option>
    }
</select>

<br />
<br />

<p><strong>Select paint colour</strong></p>
<select name="PaintColourOptions" @bind="paintColour">
    @foreach (string colour in Enum.GetNames(typeof(PaintColour)))
    {
        <option value="@colour">@colour</option>
    }
</select>

<br />
<br />

<p><strong>Select paint finish</strong></p>
<select name="paintFinishOptions" @bind="paintFinish">
    @foreach (string paintFinish in Enum.GetNames(typeof(PaintFinish)))
    {
        <option value="@paintFinish">@paintFinish</option>
    }
</select>

<br />
<br />
<!--
<p><strong>Select wheel size</strong></p>
<select name="WheelSizeOptions" @bind="wheelSize">
    @foreach (WheelSize wheelSize in Enum.GetValues(typeof(WheelSize)))
    {
        <option value="@wheelSize">@((int)wheelSize)"</option>
    }
</select>

<br />
<br />
-->

<p><strong>Select wheel size</strong></p>
<select name="WheelSizeOptions" @bind="wheelSize">
    @foreach (string wheelSize in Enum.GetNames(typeof(WheelSize)))
    {
        <option value="@wheelSize">@(wheelSize)</option>
    }
</select>

<br />
<br />

<p><strong>Select wheel type</strong></p>
<select name="wheelTypeOptions" @bind="wheelType">
    @foreach (string wheelType in Enum.GetNames(typeof(WheelType)))
    {
        <option value="@wheelType">@wheelType</option>
    }
</select>

<br />
<br />

<br />
<button @onclick="ShowCurrentConfiguration">Show Current Configuration</button>
<br />
<br />
<p>@carDetails</p>

@code {
    private CarType carType = CarType.Hatchback;
    private PaintColour paintColour = PaintColour.White;
    private PaintFinish paintFinish = PaintFinish.Matte;
    private WheelSize wheelSize = WheelSize.SeventeenInch;
    private WheelType wheelType;

    private string? carDetails;

    private void ShowCurrentConfiguration()
    {

        Car newCar;

        if (carType == CarType.Hatchback)
        {
            newCar = new Hatchback();
        }
        else
        {
            newCar = new Crossover();
        }

        newCar = new PaintColourDecorator(newCar, paintColour);
        newCar = new PaintTypeDecorator(newCar, paintFinish);
        newCar = new WheelSizeDecorator(newCar, wheelSize);
        newCar = new WheelTypeDecorator(newCar, wheelType);

        carDetails = $"{newCar.Description}. \nCost: {newCar.GetCost()}";
    }
}
